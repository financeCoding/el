/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Generated By:JJTree: Do not edit this line. AstFloatingPoint.java */

//Copyright (C) 2012 Potix Corporation. All Rights Reserved.
//History: Mon, Sep 17, 2012  07:33:01 PM
// Author: hernichen
//Port from Tomcat 7.0.x (java -> dart)


/**
 * @author Jacob Hookom [jacob@hookom.net]
 * @version $Id: AstFloatingPoint.java 1003861 2010-10-02 18:53:30Z markt $
 */
class AstFloatingPoint extends SimpleNode {
    AstFloatingPoint(int id)
        : super(id);

    num _number;

    num getFloatingPoint() {
        if (this._number == null) {
//TODO(henri): We do not support BigDecimal yet.
          this._number = double.parse(this.image_);
//            try {
//                this._number = parseDouble(this.image_);
//            } catch (ArithmeticException e0) {
//                this._number = new BigDecimal(this.image_);
//            }
        }
        return this._number;
    }

    //@Override
    Object getValue(EvaluationContext ctx) {
        return this.getFloatingPoint();
    }

    //@Override
    ClassMirror getType(EvaluationContext ctx) {
        return reflect(this.getFloatingPoint()).type;
    }
}
