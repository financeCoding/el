/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Generated By:JJTree: Do not edit this line. AstNegative.java */

//Copyright (C) 2012 Potix Corporation. All Rights Reserved.
//History: Tue, Sep 18, 2012  09:40:59 AM
// Author: hernichen
//Port from Tomcat 7.0.x (java -> dart)

/**
 * @author Jacob Hookom [jacob@hookom.net]
 * @version $Id: AstNegative.java 1049572 2010-12-15 14:54:23Z markt $
 */
class AstNegative extends SimpleNode {
    AstNegative(int id)
        : super(id);

    //@Override
    ClassMirror getType(EvaluationContext ctx) {
        return ClassUtil.NUM_MIRROR;
    }

    //@Override
    Object getValue(EvaluationContext ctx) {
        Object obj = this.children_[0].getValue(ctx);

        if (obj == null) {
            return 0;
        }
//TODO(henri) : BigDecimal not supported yet
//        if (obj is BigDecimal) {
//            return obj.negate();
//        }
        if (obj is String) {
            if (ELSupport.isStringFloat(obj)) {
                return -double.parse(obj);
            }
            return -int.parse(obj);
        }
        if (obj is double) {
            return -obj.toDouble();
        }
        if (obj is int) {
            return -obj.toInt();
        }
        int num0 = ELSupport.coerceToNumber(obj, ClassUtil.INT_MIRROR);
        return -num0.toInt();
    }
}
